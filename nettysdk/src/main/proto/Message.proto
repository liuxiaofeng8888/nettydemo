syntax = "proto3";
option java_package = "com.littlepudding.nettysdk.protobuf";
option java_outer_classname = "CarplusgoMessage";

//消息类型
enum MSG_TYPE {

    // ------------------------- 请求类型 -------------------------

    PING = 0x00000000; //客户端心跳请求
    LOCATION_REQ = 0x00000002; //客户端传输位置信息
    REGISTER_REQ = 0x00000003; //客户端注册channel
    USERTRACK_REQ = 0x00000004; //客户端内部使用
    DRSTATUS_REQ = 0x00000005; //车辆状态推送消息 是否有乘客，是否接单
    ORDER_REQ = 0x00000010; //客户下预约单
    ORDER_END_REQ = 0x00000011; //司机结束行程
    ORDER_REC_REQ = 0x00000012; //司机接单（即时单/预约单）
    ORDER_CANCEL_REQ = 0x00000013; //乘客取消订单
    ORDER_ASSIGN_REQ = 0x00000014; //指派司机 (即时单)
    ORDER_DRIVER_ARRIVE_REQ = 0x00000015; //司机已达到
    ORDER_DRIVER_PICKUP_REQ = 0x00000016; //司机已出发
    ORDER_REC_END_REQ = 0x00000017; //订单被接-预约单
    ORDER_START_REQ = 0x00000018; //开始行程
    ORDER_AUTO_COST_REQ = 0x00000019; //司机到达，开始计算等待时长费
    ORDER_PAYOK_REQ = 0x00000020; //订单支付成功
    ORDER_PRMISS_REQ = 0x00000021; //无司机响应
    DR_STATUS_WEB_REQ = 0x00000022; //司机状态
    UPLOAD_LOG_REQ = 0x00000023; //上传客户端本地日志

    // ------------------------- 响应类型 -------------------------

    PONG = 0x00000001; //服务端心跳响应
    LOCATION_RES = 0x00000100; //位置信息响应
    REGISTER_RES = 0x00000101; //注册响应
    USERTRACK_RES = 0x00000102; //客户端内部使用
    DRSTATUS_RES = 0x00000103; //车辆状态推送消息 是否有乘客，是否接单
    ORDER_RES = 0x00000104; //客户下预约单
    ORDER_END_RES = 0x00000105; //司机结束行程
    ORDER_REC_RES = 0x00000106; //司机接单（即时单/预约单）
    ORDER_CANCEL_RES = 0x00000107; //乘客取消订单
    ORDER_ASSIGN_RES = 0x00000108; //指派司机 (即时单)
    ORDER_DRIVER_ARRIVE_RES = 0x00000109; //司机已达到
    ORDER_DRIVER_PICKUP_RES = 0x00000110; //司机已出发
    ORDER_REC_END_RES = 0x00000111; //订单被接-预约单
    ORDER_START_RES = 0x00000112; //开始行程
    ORDER_AUTO_COST_RES = 0x00000113; //司机到达，开始计算等待时长费
    ORDER_PAYOK_RES = 0x00000114; //订单支付成功
    ORDER_PRMISS_RES = 0x00000115; //无司机响应
    UPLOAD_LOG_RES = 0x00000116; //上传客户端本地日志


}


enum CLIENT_TYPE {
    UNKOWN = 0; //未知
    PASSENGER = 1; //乘客
    DRIVER = 2; //司机
    TRAVEL = 3; //Travel 服务端服务
}


enum RET_CODE {
    SUCCESS = 0; //成功
    FAILURE = 1; //失败
}

//客户端请求ping
message Ping {
}

//服务端返回pong
message Pong {
}

//定位信息
message LocationReq {
    double longitude = 1; //经度
    double latitude = 2; //纬度
    double speed = 3; //速度
    double direction = 4; //方向
    string orderId = 5; //订单ID
    string connectUser = 6; //发送给对方的clientId
    string travelMile = 7; //里程（米）
    string travelAmount = 8; //里程实时价格（元）
    string expTime2 = 9; //预计还剩多少分钟到达
    uint64 timestamp = 10;

}


message LocationRes {
    double longitude = 1;
    double latitude = 2;
    double speed = 3;
    double direction = 4;
    string travelMile = 5;
    string travelAmount = 6;
    string expTime2 = 7;
    string orderId = 8;
    uint64 timestamp = 9;
}


message RegisterReq {
    string token = 1; //用于客户端校验
}

message RegisterRes {
}


message UserTrackReq {
}
message UserTrackRes {
}

message DrstatusReq {
    fixed32 onOffStatus = 1;
    fixed32 status = 2;
}
message DrstatusRes {
    fixed32 onOffStatus = 1;
    fixed32 status = 2;
    uint64 timestamp = 3;
}

message OrderReq {
    string startAdd = 1;
    string endAdd = 2;
    fixed32 order_type2 = 3;
    double startLatitude = 4;
    double startLongitude = 5;
    string orderId = 6;
    double endLatitude = 7;
    double endLongitude = 8;
    uint64 time = 9;
}

message OrderRes {
    string startAdd = 1;
    string endAdd = 2;
    fixed32 order_type2 = 3;
    double startLatitude = 4;
    double startLongitude = 5;
    string orderId = 6;
    double endLatitude = 7;
    double endLongitude = 8;
    uint64 time = 9;
}

message OrderEndReq {
    string orderId = 1;
    uint64 startTime = 2;
    uint64 time = 3;
    double distance = 4;
    double cost = 5;
    string connectUser = 6;
}


message OrderEndRes {
    string orderId = 1;
    uint64 startTime = 2;
    uint64 time = 3;
    double distance = 4;
    double cost = 5;
    string connectUser = 6;
}

message OrderRecReq {
    string orderId = 1;
    uint64 timestamp = 2;
    string FromUser = 3;
    double longitude = 4;
    double latitude = 5;
    fixed32 orderType = 6;
}


message OrderRecRes {
    string orderId = 1;
    uint64 timestamp = 2;
    string FromUser = 3;
    double longitude = 4;
    double latitude = 5;
    fixed32 orderType = 6;
}

message OrderCancelReq {
    string orderId = 1;
    uint64 time = 2;
    fixed32 orderType = 3;
    string fromUser = 4;
    fixed32 role = 5;
}

message OrderCancelRes {
    string orderId = 1;
    uint64 time = 2;
    fixed32 orderType = 3;
    string fromUser = 4;
    fixed32 role = 5;
}

message OrderAssignReq {
    string startAdd = 1;
    string endAdd = 2;
    string orderId = 3;
    uint64 time = 4;
    string content = 5;
    string connectUser = 6;
    double startLatitude = 7;
    double startLongitude = 8;
    double endLatitude = 9;
    double endLongitude = 10;
}

message OrderAssignRes {
    string startAdd = 1;
    string endAdd = 2;
    string orderId = 3;
    uint64 time = 4;
    string content = 5;
    string connectUser = 6;
    double startLatitude = 7;
    double startLongitude = 8;
    double endLatitude = 9;
    double endLongitude = 10;
}

message OrderDriverArriveReq {
    string orderId = 1;
    uint64 time = 2;
    string connectUser = 3;
}


message OrderDriverArriveRes {
    string orderId = 1;
    uint64 time = 2;
    string connectUser = 3;
}

message OrderDriverPickUpReq {
    string orderId = 1;
    uint64 time = 2;
    string connectUser = 3;
}

message OrderDriverPickUpRes {
    string orderId = 1;
    uint64 time = 2;
    string connectUser = 3;
}

message OrderRecEndReq {
    string orderId = 1;
    fixed32 orderType = 2;
    uint64 timestamp = 3;
}


message OrderRecEndRes {
    string orderId = 1;
    fixed32 orderType = 2;
    uint64 timestamp = 3;
}

message OrderStartReq {
    string orderId = 1;
    uint64 time = 2;
    string connectUser = 3;
}

message OrderStartRes {
    string orderId = 1;
    uint64 time = 2;
    string connectUser = 3;
}

message OrderAutoCostReq {
    string connectUser = 1;
    string orderId = 2;
    string passengerId = 3;
}


message OrderAutoCostRes {
    string connectUser = 1;
    string orderId = 2;
    string passengerId = 3;
}

message OrderPayOkReq {
    string orderId = 1;
    double cost = 2;
    string connectUser = 3;
}


message OrderPayOkRes {
    string orderId = 1;
    double cost = 2;
    string connectUser = 3;
}

message OrderPrMissReq {
    string startAdd = 1;
    string endAdd = 2;
    string orderId = 3;
    uint64 time = 4;
    string content = 5;
    uint64 startTime = 6;
    string connectUser = 7;
}


message OrderPrMissRes {
    string startAdd = 1;
    string endAdd = 2;
    string orderId = 3;
    uint64 time = 4;
    string content = 5;
    uint64 startTime = 6;
    string connectUser = 7;
}

message DrstatusWebReq {
    string driverId = 1;
}

message UploadLogRes {
}
message UploadLogReq {
}

message Request {
    MSG_TYPE msgType = 1;
    CLIENT_TYPE clientType = 2;
    string clientId = 3;
    fixed32 phoneType = 4; //android: 1, iOS: 2, h5: 3
    oneof Pack {
        Ping ping = 5; //服务端心跳响应
        LocationReq locationReq = 6;
        RegisterReq registerReq = 7;
        OrderReq orderReq = 8;
        OrderRecReq orderRecReq = 9;
        OrderAssignReq orderAssignReq = 10;
        OrderDriverArriveReq orderDriverArriveReq = 11;
        OrderDriverPickUpReq orderDriverPickUpReq = 12;
        OrderRecEndReq orderRecEndReq = 13;
        OrderStartReq orderStartReq = 14;
        OrderEndReq orderEndReq = 15;
        OrderPayOkReq orderPayOkReq = 16;
        OrderCancelReq orderCancelReq = 17;
        OrderAutoCostReq orderAutoCostReq = 18;
        UserTrackReq userTrackReq = 19;
        DrstatusReq drstatusReq = 20;
        OrderPrMissReq orderPrMissReq = 21;
        DrstatusWebReq drstatusWebReq = 22;
        UploadLogReq uploadLogReq = 23;
    }
}


message Response {
    MSG_TYPE msgType = 1;
    RET_CODE retCode = 2; //状态码
    string result = 3;
    oneof Pack {
        Pong pong = 4; //服务端心跳响应
        LocationRes locationRes = 5;
        RegisterRes registerRes = 6;
        OrderRes orderRes = 7;
        OrderRecRes orderRecRes = 8;
        OrderAssignRes orderAssignRes = 9;
        OrderDriverArriveRes orderDriverArriveRes = 10;
        OrderDriverPickUpRes orderDriverPickUpRes = 11;
        OrderRecEndRes orderRecEndRes = 12;
        OrderStartRes orderStartRes = 13;
        OrderEndRes orderEndRes = 14;
        OrderPayOkRes orderPayOkRes = 15;
        OrderCancelRes orderCancelRes = 16;
        OrderAutoCostRes orderAutoCostRes = 17;
        UserTrackRes userTrackRes = 18;
        DrstatusRes drstatusRes = 19;
        OrderPrMissRes orderPrMissRes = 20;
        UploadLogRes uploadLogRes = 21;
    }
}
